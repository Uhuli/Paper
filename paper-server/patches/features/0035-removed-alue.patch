From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Mika <Mika@zestnik.de>
Date: Sat, 26 Apr 2025 19:56:44 +0200
Subject: [PATCH] removed alue


diff --git a/net/minecraft/server/Eula.java b/net/minecraft/server/Eula.java
deleted file mode 100644
index 1f0413214f54e9a47f53c623484d6882c85f54c9..0000000000000000000000000000000000000000
--- a/net/minecraft/server/Eula.java
+++ /dev/null
@@ -1,55 +0,0 @@
-package net.minecraft.server;
-
-import com.mojang.logging.LogUtils;
-import java.io.InputStream;
-import java.io.OutputStream;
-import java.nio.file.Files;
-import java.nio.file.Path;
-import java.util.Properties;
-import net.minecraft.SharedConstants;
-import net.minecraft.util.CommonLinks;
-import org.slf4j.Logger;
-
-public class Eula {
-    private static final Logger LOGGER = LogUtils.getLogger();
-    private final Path file;
-    private final boolean agreed;
-
-    public Eula(Path file) {
-        this.file = file;
-        this.agreed = SharedConstants.IS_RUNNING_IN_IDE || this.readFile();
-    }
-
-    private boolean readFile() {
-        try {
-            boolean var3;
-            try (InputStream inputStream = Files.newInputStream(this.file)) {
-                Properties map = new Properties();
-                map.load(inputStream);
-                var3 = Boolean.parseBoolean(map.getProperty("eula", "false"));
-            }
-
-            return var3;
-        } catch (Exception var6) {
-            LOGGER.warn("Failed to load {}", this.file);
-            this.saveDefaults();
-            return false;
-        }
-    }
-
-    public boolean hasAgreedToEULA() {
-        return this.agreed;
-    }
-
-    private void saveDefaults() {
-        if (!SharedConstants.IS_RUNNING_IN_IDE) {
-            try (OutputStream outputStream = Files.newOutputStream(this.file)) {
-                Properties map = new Properties();
-                map.setProperty("eula", "false");
-                map.store(outputStream, "By changing the setting below to TRUE you are indicating your agreement to our EULA (" + CommonLinks.EULA + ").");
-            } catch (Exception var6) {
-                LOGGER.warn("Failed to save {}", this.file, var6);
-            }
-        }
-    }
-}
diff --git a/net/minecraft/server/Main.java b/net/minecraft/server/Main.java
index 9aa664537cc37e44db46d5a2a64ae3116938c681..b06441af40637f5727a628fee43c7ecaee9dcfed 100644
--- a/net/minecraft/server/Main.java
+++ b/net/minecraft/server/Main.java
@@ -1,6 +1,5 @@
 package net.minecraft.server;
 
-import com.mojang.authlib.yggdrasil.YggdrasilAuthenticationService;
 import com.mojang.datafixers.DataFixer;
 import com.mojang.logging.LogUtils;
 import com.mojang.serialization.Dynamic;
@@ -16,12 +15,8 @@ import java.nio.file.Paths;
 import java.util.Optional;
 import java.util.function.BooleanSupplier;
 import javax.annotation.Nullable;
-import joptsimple.OptionParser;
 import joptsimple.OptionSet;
-import joptsimple.OptionSpec;
-import joptsimple.util.PathConverter;
 import net.minecraft.CrashReport;
-import net.minecraft.DefaultUncaughtExceptionHandler;
 import net.minecraft.SharedConstants;
 import net.minecraft.SuppressForbidden;
 import net.minecraft.Util;
@@ -116,8 +111,6 @@ public class Main {
             DedicatedServerSettings dedicatedServerSettings = new DedicatedServerSettings(optionSet); // CraftBukkit - CLI argument support
             dedicatedServerSettings.forceSave();
             RegionFileVersion.configure(dedicatedServerSettings.getProperties().regionFileComression);
-            Path path2 = Paths.get("eula.txt");
-            Eula eula = new Eula(path2);
             // Paper start - load config files early for access below if needed
             org.bukkit.configuration.file.YamlConfiguration bukkitConfiguration = io.papermc.paper.configuration.PaperConfigurations.loadLegacyConfigFile((File) optionSet.valueOf("bukkit-settings"));
             org.bukkit.configuration.file.YamlConfiguration spigotConfiguration = io.papermc.paper.configuration.PaperConfigurations.loadLegacyConfigFile((File) optionSet.valueOf("spigot-settings"));
@@ -136,20 +129,7 @@ public class Main {
                 commandsConfiguration.setDefaults(org.bukkit.configuration.file.YamlConfiguration.loadConfiguration(new java.io.InputStreamReader(Main.class.getClassLoader().getResourceAsStream("configurations/commands.yml"), com.google.common.base.Charsets.UTF_8)));
                 commandsConfiguration.save(commandFile);
                 // CraftBukkit end
-                LOGGER.info("Initialized '{}' and '{}'", path1.toAbsolutePath(), path2.toAbsolutePath());
-                return;
-            }
-
-            // Spigot start
-            boolean eulaAgreed = Boolean.getBoolean("com.mojang.eula.agree");
-            if (eulaAgreed) {
-                LOGGER.error("You have used the Spigot command line EULA agreement flag.");
-                LOGGER.error("By using this setting you are indicating your agreement to Mojang's EULA (https://aka.ms/MinecraftEULA).");
-                LOGGER.error("If you do not agree to the above EULA please stop your server and remove this flag immediately.");
-            }
-            if (!eula.hasAgreedToEULA() && !eulaAgreed) {
-                // Spigot end
-                LOGGER.info("You need to agree to the EULA in order to run the server. Go to eula.txt for more info.");
+                LOGGER.info("Initialized '{}' and '{}'", path1.toAbsolutePath(), "");
                 return;
             }
 
